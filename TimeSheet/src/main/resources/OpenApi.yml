openapi: 3.0.0
info:
  title: Sample API
  description: Optional multiline or single-line description in [CommonMark](http://commonmark.org/help/) or HTML.
  version: 0.1.9

tags:
  - name: "TimeSheet"
  - name: "TeamMember"
  - name: "Report"

paths:
  /teammembers:
    get:
      summary: This gets all teammembers
      description: This method return list of TeamMembers
      tags:
        - "TeamMember"
      operationId: getTeamMembers
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeamMemberDTO'
        "400":
          description: BAD REQUEST
        "401":
          description: UNAUTH

  /report:
    post:
      summary: This method generates requested reports
      description: This method return list of reports that fits given paramenthers
      tags:
        - "Report"
      operationId: getRequiredReports
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportFilterDTO'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TimeSheetEntryReportDTO'
        "400":
          description: BAD REQUEST
        "401":
          description: UNAUTH

  /entry:
    get:
      summary: This gets all time sheet entries
      description: This method return list of TimeSheetEntries
      tags:
        - "TimeSheetEntry"
      operationId: getAllEntries
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TimeSheetEntryDTO'
        "400":
          description: BAD REQUEST
        "401":
          description: UNAUTH
    post:
      summary: This method creates time sheet entry
      tags:
        - "TimeSheetEntry"
      operationId: insertEntry
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeSheetEntryDTO'
      responses:
        "201":
          description: CREATED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeSheetEntryDTO'
        "400":
          description: BAD REQUEST
        "403":
          description: FORBIDDEN
        "404":
          description: NOT FOUND
    put:
      summary: This method changes given time sheet entry
      tags:
        - "TimeSheetEntry"
      operationId: updateEntry
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeSheetEntryDTO'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeSheetEntryDTO'
        "400":
          description: BAD REQUEST
        "403":
          description: FORBIDDEN
        "404":
          description: NOT FOUND

  /entry/{id}:
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      summary: This method return one TimeSheetEntry by id if exist
      tags:
        - "TimeSheetEntry"
      operationId: getEntry
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeSheetEntryDTO'
        "400":
          description: BAD REQUEST
        "401":
          description: UNAUTH
        "404":
          description: NOT FOUND

    delete:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      summary: This method delete one Entry by id if exist
      tags:
        - "TimeSheetEntry"
      operationId: deleteEntry
      responses:
        "200":
          description: Success
        "400":
          description: BAD REQUEST
        "401":
          description: UNAUTH
        "404":
          description: NOT FOUND

components:
  schemas:

    TeamMemberDTO:
      description: This is the TeamMember object.
      type: object
      properties:
        id:
          description: The id of TeamMember
          type: integer
        name:
          description: The name of TeamMember
          type: string
        username:
          description: The username of TeamMember
          type: string
        email:
          description: The email of TeamMember
          type: string
        status:
          description: The status of TeamMember
          type: boolean
        hoursPerWeek:
          description: The hours per week of TeamMember
          type: number

    TimeSheetEntryReportDTO:
      description: This is an object that represents one user entry
      type: object
      properties:
        id:
          description: The id of the entry
          type: integer
        date:
          description: The date of user entry
          type: string
        description:
          description: The description of user entry
          type: string
        totalTimeSpent:
          description: Total time user entered, including overtime
          type: number
        projectName:
          description: Name of the project on which time is spent
          type: string
        categoryName:
          description: Name of the category where time is spent
          type: string
        teamMemberName:
          description: Name of team member that made the entry
          type: string

    TimeSheetEntryDTO:
      description: This is an object that represents one user entry
      type: object
      properties:
        id:
          description: The id of the entry
          type: integer
        date:
          description: The date of user entry
          type: string
          pattern: ^\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$
        description:
          description: The description of user entry
          type: string
        timeSpent:
          description: Time user spent
          type: number
          minimum: 0
          maximum: 24
        overtimeSpent:
          description: Additional time user spent
          type: number
          minimum: 0
          maximum: 24
        projectId:
          description: Id of the project on which user was working
          type: integer
        categoryId:
          description: Id of the category where time is spent
          type: integer
        clientId:
          description: Name of the client user worked for
          type: integer
      required:
        - timeSpent
        - date
        - projectId
        - categoryId
        - clientId

    ReportFilterDTO:
      description: This object represents parameters for entry filter
      type: object
      properties:
        startDate:
          description: Beginning of time range
          type: string
        endDate:
          description: End of time range
          type: string
        categoryId:
          description: The category of wanting entries
          type: integer
        projectId:
          description: The project on which time was spent
          type: integer
        teamMemberId:
          description: The team member that made wanted entries
          type: integer
        clientId:
          description: The client for whom the time was spent
          type: integer